require 'spec_helper'

describe 'Creating a Mapping', type: feature, js: true do
  it 'allows a user to access the manager' do
    page.driver.basic_authorize('atomic', 'atomic')

    visit('/admin/manager')

    expect(page).to have_content('Short URL')
  end

  it 'allows a user to create a new custom mapping' do
    page.driver.basic_authorize('atomic', 'atomic')

    visit('/admin/manager')

    fill_in('url', with: 'https://example.com/')
    fill_in('tag', with: 'testing1')

    click_on('Shorten')

    expect(page).to have_content('testing1')

    fill_in('url', with: 'https://example.com/custom')
    fill_in('tag', with: 'testing2')

    click_on('Shorten')

    expect(page).to have_content('testing2')
  end

  it 'allows a user to create a new generated mapping' do
    page.driver.basic_authorize('atomic', 'atomic')

    visit('/admin/manager')

    fill_in('url', with: 'https://example.com/autogenerated')

    click_on('Shorten')

    expect(page).to have_content('https://example.com/autogenerated')
  end

  it 'does not allow the user to use an invalid tag' do
    page.driver.basic_authorize('atomic', 'atomic')

    visit('/admin/manager')

    fill_in('url', with: 'http://www.googl.com')
    fill_in('tag', with: 'invalid-tag')

    click_on('Shorten')

    expect(page).to have_content('Tag is not valid')
  end

  it 'does not allow the user to use an invalid URL' do
    page.driver.basic_authorize('atomic', 'atomic')

    visit('/admin/manager')

    fill_in('url', with: 'google.com')
    fill_in('tag', with: 'validtag')

    click_on('Shorten')

    expect(page).to have_content('URL is not valid')
  end

  it 'does not allow the user to use blank URL' do
    page.driver.basic_authorize('atomic', 'atomic')

    visit('/admin/manager')

    fill_in('url', with: '')
    fill_in('tag', with: 'validtag')

    click_on('Shorten')

    expect(page).to have_content('URL cannot be blank')
  end

  it 'does allow the user to use a blank tag' do
    page.driver.basic_authorize('atomic', 'atomic')

    visit('/admin/manager')

    fill_in('url', with: 'http://google.com')

    click_on('Shorten')

    expect(page).to have_content('http://google.com')
  end
end

describe 'Deleting a Mapping', type: feature, js: true do
  it 'allows the user to delete an existing mapping' do
    page.driver.basic_authorize('atomic', 'atomic')

    visit('/admin/manager')

    expect(page).to have_content('testing1')

    page.accept_confirm 'Are you sure?' do
      find('input#delete_testing1').click
    end

    expect(page).to have_content('Successfully deleted')
    expect(Mapping.find_by_tag('testing1')).to be nil
  end

  it 'allows the user to abort deleting an existing mapping' do
    page.driver.basic_authorize('atomic', 'atomic')

    visit('/admin/manager')

    expect(page).to have_content('testing2')

    page.dismiss_confirm 'Are you sure?' do
      find('#delete_testing2').click
    end

    expect(Mapping.find_by_tag('testing2')).to_not be nil
  end
end
